name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger workflow on push to the master branch
  pull_request:
    branches:
      - master  # Trigger workflow on pull request to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: sa@123456
        ports:
          - 1433:1433
        options: --health-cmd "exit 0" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 1: Log out from the current Docker Hub account (if any)
    - name: Logout from Docker Hub
      run: docker logout

    # Step 2: Log in to Docker Hub with new credentials
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME_OPUS }}
        password: ${{ secrets.DOCKER_PASSWORD_OPUS }}

    - name: Build Docker Image
      run: |
        docker build -t my-aspnetcore-image .

    # Skip Test step, since you don't need it now
    # - name: Run Tests
    #   run: |
    #     docker run --rm my-aspnetcore-image dotnet test

    - name: Push Docker Image to Docker Hub
      run: |
        docker tag my-aspnetcore-image ${{ secrets.DOCKER_USERNAME_OPUS }}/my-aspnetcore-image:latest
        docker push ${{ secrets.DOCKER_USERNAME_OPUS }}/my-aspnetcore-image:latest

    - name: Deploy to Production (Optional)
      run: |
        echo "Deploy to your server here."
        # For example, use SSH to deploy the application or other deployment scripts
